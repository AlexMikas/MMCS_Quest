{"version":3,"sources":["FrontPage.js","Axios.js","Tasks.js","SuperTask.js","App.js","serviceWorker.js","index.js"],"names":["FrontPage","document","title","style","display","flexDirection","marginBottom","align","href","flex","justifyContent","to","Button","variant","width","Component","axios","require","emptyState","Object","freeze","text","type","equationsX","equationsY","inequalities","inequalitiesLeftActive","choiceOptions","choiceSelected","success","parseMathjax","Provider","split","map","value","index","Node","inline","formula","Tasks","props","state","id","localStorage","getItem","this","get","jsonRequest","setState","post","then","response","setItem","data","Date","newState","options","catch","error","console","log","solution","x","parseFloat","y","object","setTimeout","next_task","e","test","key","preventDefault","subIndex","newValue","row","alignItems","className","onKeyPress","numericInputHandler","onChange","target","onClick","solve","disabled","changeInequalityInput","marginRight","DropdownButton","block","onSelect","changeInequalityDropdown","Dropdown","Item","eventKey","marginLeft","splice","Form","Group","controlId","Check","checked","label","whiteSpace","date2","date1","seconds","Math","floor","timeString","interval","trim","timeSince","autoplay","muted","src","renderResponseField","SuperTask","App","frontPage","tasksPage","superTaskPage","fontFamily","fontWeight","fontStyle","fontSize","class","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f5f9973b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass FrontPage extends Component {\n    componentDidMount() {\n        document.title = 'Веб-квест';\n    }\n\n    render() {\n        return (\n            <div style={{\n                display: 'flex',\n                flexDirection: 'column'\n            }}>\n                <div style={{\n                    marginBottom: '1em'\n                }}>\n                    <p align=\"justify\"> Текст Супер-задачи открывается в 14-00. </p>\n                    <p align=\"justify\">\n                        Решение следует присылать по электронной почте по\n                        адресу <a href=\"mailto:XXX@sfedu.ru\">XXX@sfedu.ru</a>.\n                        В электронном письме Игрок должен указать свое имя,\n                        класс и школу (или техникум), в которой учится.\n                        Временем решения Супер-задачи считается время от 14\n                        часов до получения письма с решением. За каждый символ\n                        решения, не совпадающий с эталонным, ко времени Игрока\n                        прибавляется 3 (штрафных) минуты. Победитель\n                        получает <b>ПРИЗ</b> от директора (декана) Института математики\n                        механики и компьютерных наук им. И.И. Воровича.\n                    </p>\n                    <p align=\"justify\">\n                        За решение обычных задач призы не выдаются.\n                    </p>\n                </div>\n                <div style={{\n                    display: 'flex',\n                    flexDirection: 'row'\n                }}>\n                    <div style={{\n                        flex: 1,\n                        justifyContent: 'left'\n                    }}>\n                        <Link to=\"/tasks.html\">\n                            <Button\n                                variant=\"primary\"\n                                style={{width: '10em'}}\n                            >\n                                Задачи\n                            </Button>\n                        </Link>\n                    </div>\n                    <div style={{\n                        justifyContent: 'right'\n                    }}>\n                        <Link to=\"/supertask.html\">\n                            <Button\n                                variant=\"primary\"\n                                style={{width: '10em'}}\n                            >\n                                Супер-задача\n                            </Button>\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FrontPage;\n","const axios = require('axios');\n//axios.defaults.baseURL = 'http://127.0.0.1:8000';\nexport default axios;\n","import React, { Component } from 'react';\nimport { Button, DropdownButton, Dropdown, Form } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport MathJax from 'react-mathjax';\nimport axios from './Axios.js';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst emptyState = Object.freeze({\n    text: '',\n    type: '',\n    equationsX: '',\n    equationsY: '',\n    inequalities: [['', '<', '<', '']],\n    inequalitiesLeftActive: [true],\n    choiceOptions: [],\n    choiceSelected: 0,\n    success: null\n});\n\nfunction parseMathjax(text) {\n    return (\n        <MathJax.Provider>\n            {text\n                .split('$')\n                .map((value, index) => {\n                    if(index % 2 === 1)\n                        return (\n                            <MathJax.Node inline formula={value} />\n                        );\n                    else\n                        return value;\n                })}\n        </MathJax.Provider>\n    );\n}\n\nfunction timeSince(date2, date1) {\n    let seconds = Math.floor((date2 - date1) / 1000);\n    let timeString = '';\n\n    let interval = Math.floor(seconds / 86400);\n    if(interval >= 1)\n        timeString += `${interval}д `;\n    seconds %= 86400;\n\n    interval = Math.floor(seconds / 3600);\n    if(interval >= 1)\n        timeString += `${interval}ч `;\n    seconds %= 3600;\n\n    interval = Math.floor(seconds / 60);\n    if(interval >= 1)\n        timeString += `${interval}м `;\n    seconds %= 60;\n    if(seconds >= 1)\n        timeString += `${seconds}с`\n\n    return timeString.trim();\n}\n\nclass Tasks extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...emptyState,\n            id: localStorage.getItem('last_id') || ''\n        };\n    }\n\n    componentDidMount() {\n        document.title = 'Веб-квест - Задачи';\n        this.get();\n    }\n\n    get() {\n        let jsonRequest = {\n            id: this.state.id\n        };\n        if(this.state.id === 'success') {\n            this.setState({\n                text: '',\n                type: 'success'\n            });\n        }\n        else {\n            axios\n                .post('/api/task/get', jsonRequest, null)\n                .then(response => {\n                    localStorage.setItem('last_id', response.data.id);\n                    if(this.state.id === '') {\n                        localStorage.setItem('start_time', new Date());\n                    }\n                    let newState = {\n                        ...emptyState,\n                        id: response.data.id,\n                        text: response.data.text,\n                        type: response.data.type\n                    };\n                    if(response.data.type === 'choice')\n                        newState.choiceOptions = response.data.options;\n                    this.setState(newState);\n                })\n                .catch(error => console.log(error));\n        }\n    }\n\n    solve() {\n        let jsonRequest = {\n            id: this.state.id\n        };\n        if(this.state.type === 'equations') {\n            jsonRequest.solution = {\n                x: parseFloat(this.state.equationsX),\n                y: parseFloat(this.state.equationsY)\n            };\n        }\n        else if(this.state.type === 'inequalities') {\n            jsonRequest.solution = this.state.inequalities.map(value => {\n                let object = {};\n                object[value[2]] = parseFloat(value[3]);\n                if(value[1] === '<')\n                    object['>'] = parseFloat(value[0]);\n                else if(value[1] === '<=')\n                    object['>='] = parseFloat(value[0]);\n                return object;\n            });\n        }\n        else if(this.state.type === 'choice') {\n            jsonRequest.solution = this.state.choiceSelected;\n        }\n        else {\n            return;\n        }\n        axios\n            .post('/api/task/solve', jsonRequest, null)\n            .then(response => {\n                if(response.data.success) {\n                    this.setState({success: true}, () => {\n                        setTimeout(() => {\n                            localStorage.setItem('last_id', response.data.next_task.id);\n                            if(response.data.next_task.id === 'success') {\n                                localStorage.setItem('end_time', new Date());\n                                this.setState({\n                                    ...emptyState,\n                                    id: response.data.next_task.id\n                                }, this.get);\n                            }\n                            else {\n                                let newState = {\n                                    ...emptyState,\n                                    id: response.data.next_task.id,\n                                    text: response.data.next_task.text,\n                                    type: response.data.next_task.type\n                                };\n                                if(response.data.next_task.type === 'choice')\n                                    newState.choiceOptions = response.data.next_task.options;\n                                this.setState(newState);\n                            }\n                        }, 1500);\n                    });\n                }\n                else {\n                    this.setState({success: false}, () => {\n                        setTimeout(() => {\n                            this.setState({type: 'failure'});\n                        }, 1500);\n                    });\n                }\n            })\n            .catch(error => console.log(error));\n    }\n\n    numericInputHandler(e) {\n        const re = /[0-9.]/g;\n        if(!re.test(e.key))\n            e.preventDefault();\n    }\n\n    changeInequalityInput(index, subIndex, newValue) {\n        this.setState(state => {\n            const inequalities = [...state.inequalities];\n            const row = [...inequalities[index]];\n            row[subIndex] = newValue;\n            inequalities[index] = row;\n            return {\n                inequalities: inequalities\n            };\n        });\n    }\n\n    changeInequalityDropdown(index, subIndex, newValue) {\n        this.setState(state => {\n            const inequalities = [...state.inequalities];\n            let inequalitiesLeftActive = [...state.inequalitiesLeftActive];\n            const row = [...inequalities[index]];\n            row[subIndex] = newValue;\n            if(subIndex === 1) {\n                if(newValue === ' ')\n                    inequalitiesLeftActive[index] = false;\n                else {\n                    if(row[2] === '=')\n                        row[2] = '<';\n                    inequalitiesLeftActive[index] = true;\n                }\n            }\n            else if(subIndex === 2) {\n                if(newValue === '=') {\n                    inequalitiesLeftActive[index] = false;\n                    row[1] = ' ';\n                }\n            }\n            inequalities[index] = row;\n            return {\n                inequalities: inequalities,\n                inequalitiesLeftActive: inequalitiesLeftActive\n            };\n        });\n    }\n\n    renderResponseField() {\n        if(this.state.type === 'equations') {\n            return (\n                <div style={{\n                    display: 'flex',\n                    flexDirection: 'row'\n                }}>\n                    <div style={{\n                        flex: 1,\n                        flexDirection: 'column',\n                        justifyContent: 'left'\n                    }}>\n                        <div style={{\n                            display: 'flex',\n                            flexDirection: 'row',\n                            alignItems: 'center',\n                            marginBottom: '1em'\n                        }}>\n                            <span style={{width: '1.5em'}}>\n                                x =\n                            </span>\n                            <input\n                                className=\"form-control\"\n                                onKeyPress={this.numericInputHandler}\n                                onChange={e => {\n                                    const value = e.target.value;\n                                    this.setState({\n                                        equationsX: value\n                                    });\n                                }}\n                                value={this.state.equationsX}\n                                style={{width: '5em'}}\n                            />\n                        </div>\n                        <div style={{\n                            display: 'flex',\n                            flexDirection: 'row',\n                            alignItems: 'center'\n                        }}>\n                            <span style={{width: '1.5em'}}>\n                                y =\n                            </span>\n                            <input\n                                className=\"form-control\"\n                                onKeyPress={this.numericInputHandler}\n                                onChange={e => {\n                                    const value = e.target.value;\n                                    this.setState({\n                                        equationsY: value\n                                    });\n                                }}\n                                value={this.state.equationsY}\n                                style={{width: '5em'}}\n                            />\n                        </div>\n                    </div>\n                    <div style={{\n                        justifyContent: 'right'\n                    }}>\n                        {this.state.success === null &&\n                            <Button\n                                variant=\"primary\"\n                                style={{width: '10em'}}\n                                onClick={() => this.solve()}\n                            >\n                                Отправить\n                            </Button>}\n                        {this.state.success === true &&\n                            <Button\n                                variant=\"success\"\n                                style={{width: '10em'}}\n                            >\n                                Правильно\n                            </Button>}\n                        {this.state.success === false &&\n                            <Button\n                                variant=\"danger\"\n                                style={{width: '10em'}}\n                            >\n                                Неправильно\n                            </Button>}\n                    </div>\n                </div>\n            );\n        }\n        else if(this.state.type === 'inequalities') {\n            return (\n                <div style={{\n                    display: 'flex',\n                    flexDirection: 'row'\n                }}>\n                    <div style={{\n                        flex: 1,\n                        flexDirection: 'column',\n                        justifyContent: 'left'\n                    }}>\n                        {this.state.inequalities.map((value, index) => (\n                            <div style={{\n                                display: 'flex',\n                                flexDirection: 'row',\n                                alignItems: 'center',\n                                marginBottom: '1em'\n                            }}>\n                                <input\n                                    disabled={!this.state.inequalitiesLeftActive[index]}\n                                    className=\"form-control\"\n                                    onKeyPress={this.numericInputHandler}\n                                    onChange={e => {\n                                        const value = e.target.value;\n                                        this.changeInequalityInput(index, 0, value);\n                                    }}\n                                    value={this.state.inequalitiesLeftActive[index]\n                                        ? this.state.inequalities[index][0]\n                                        : ''}\n                                    style={{\n                                        width: '5em',\n                                        marginRight: '0.5em'\n                                    }}\n                                />\n                                <DropdownButton\n                                    block={true}\n                                    id={'dropdown0' + index}\n                                    title={this.state.inequalities[index][1]}\n                                    variant=\"secondary\"\n                                    onSelect={e => {\n                                        this.changeInequalityDropdown(index, 1, e);\n                                    }}\n                                >\n                                    <Dropdown.Item eventKey=\" \">&nbsp;</Dropdown.Item>\n                                    <Dropdown.Item eventKey=\"<\">{'<'}</Dropdown.Item>\n                                    <Dropdown.Item eventKey=\"<=\">{'<='}</Dropdown.Item>\n                                </DropdownButton>\n                                <div style={{\n                                    marginLeft: '0.5em',\n                                    marginRight: '0.5em'\n                                }}>\n                                    x\n                                </div>\n                                <DropdownButton\n                                    block={true}\n                                    id={'dropdown1' + index}\n                                    title={this.state.inequalities[index][2]}\n                                    variant=\"secondary\"\n                                    onSelect={e => {\n                                        this.changeInequalityDropdown(index, 2, e);\n                                    }}\n                                >\n                                    <Dropdown.Item eventKey=\"=\">{'='}</Dropdown.Item>\n                                    <Dropdown.Item eventKey=\"<\">{'<'}</Dropdown.Item>\n                                    <Dropdown.Item eventKey=\"<=\">{'<='}</Dropdown.Item>\n                                </DropdownButton>\n                                <input\n                                    className=\"form-control\"\n                                    onKeyPress={this.numericInputHandler}\n                                    onChange={e => {\n                                        const value = e.target.value;\n                                        this.changeInequalityInput(index, 3, value);\n                                    }}\n                                    value={this.state.inequalities[index][3]}\n                                    style={{\n                                        width: '5em',\n                                        marginLeft: '0.5em',\n                                        marginRight: '0.5em'\n                                    }}\n                                />\n                                {index !== 0 &&\n                                    <Button\n                                        variant=\"primary\"\n                                        onClick={() => {\n                                            this.setState(state => {\n                                                let inequalities = [...state.inequalities];\n                                                inequalities.splice(index, 1);\n                                                let inequalitiesLeftActive = [...state.inequalitiesLeftActive];\n                                                inequalitiesLeftActive.splice(index, 1);\n                                                return {\n                                                    inequalities: inequalities,\n                                                    inequalitiesLeftActive: inequalitiesLeftActive\n                                                };\n                                            });\n                                        }}\n                                    >\n                                        Удалить\n                                    </Button>\n                                }\n                            </div>\n                        ))}\n                        <Button\n                            variant=\"primary\"\n                            onClick={() => {\n                                this.setState(state => {\n                                    let inequalities = [...state.inequalities, emptyState.inequalities[0]];\n                                    let inequalitiesLeftActive = [...state.inequalitiesLeftActive, true];\n                                    return {\n                                        inequalities: inequalities,\n                                        inequalitiesLeftActive: inequalitiesLeftActive\n                                    };\n                                });\n                            }}\n                        >\n                            Добавить\n                        </Button>\n                    </div>\n                    <div style={{\n                        justifyContent: 'right'\n                    }}>\n                        {this.state.success === null &&\n                            <Button\n                                variant=\"primary\"\n                                style={{width: '10em'}}\n                                onClick={() => this.solve()}\n                            >\n                                Отправить\n                            </Button>}\n                        {this.state.success === true &&\n                            <Button\n                                variant=\"success\"\n                                style={{width: '10em'}}\n                            >\n                                Правильно\n                            </Button>}\n                        {this.state.success === false &&\n                            <Button\n                                variant=\"danger\"\n                                style={{width: '10em'}}\n                            >\n                                Неправильно\n                            </Button>}\n                    </div>\n                </div>\n            );\n        }\n        else if(this.state.type === 'choice') {\n            return (\n                <div style={{\n                    display: 'flex',\n                    flexDirection: 'row'\n                }}>\n                    <div style={{\n                        flex: 1,\n                        flexDirection: 'column',\n                        justifyContent: 'left'\n                    }}>\n                        <Form>\n                            <Form.Group controlId=\"choiceRadio\">\n                                {this.state.choiceOptions.map((value, index) => (\n                                    <Form.Check\n                                        checked={this.state.choiceSelected === index}\n                                        onClick={() => this.setState({choiceSelected: index})}\n                                        type=\"radio\"\n                                        label={parseMathjax(value)}\n                                    />\n                                ))}\n                            </Form.Group>\n                        </Form>\n                    </div>\n                    <div style={{\n                        justifyContent: 'right'\n                    }}>\n                        {this.state.success === null &&\n                            <Button\n                                variant=\"primary\"\n                                style={{width: '10em'}}\n                                onClick={() => this.solve()}\n                            >\n                                Отправить\n                            </Button>}\n                        {this.state.success === true &&\n                            <Button\n                                variant=\"success\"\n                                style={{width: '10em'}}\n                            >\n                                Правильно\n                            </Button>}\n                        {this.state.success === false &&\n                            <Button\n                                variant=\"danger\"\n                                style={{width: '10em'}}\n                            >\n                                Неправильно\n                            </Button>}\n                    </div>\n                </div>\n            );\n        }\n        else {\n            return null;\n        }\n    }\n\n    render() {\n        return (\n            <div style={{\n                display: 'flex',\n                flexDirection: 'column'\n            }}>\n                <div style={{\n                    display: 'flex',\n                    flexDirection: 'row',\n                    marginBottom: '1em'\n                }}>\n                    <div style={{\n                        flex: 1,\n                        justifyContent: 'left'\n                    }}>\n                        <Link to=\"/\">\n                            <Button\n                                variant=\"primary\"\n                                style={{width: '10em'}}\n                            >\n                                На главную\n                            </Button>\n                        </Link>\n                    </div>\n                    <div style={{\n                        justifyContent: 'right'\n                    }}>\n                        <Button\n                            variant=\"primary\"\n                            style={{width: '10em'}}\n                            onClick={() => {\n                                this.setState({id: ''}, this.get);\n                            }}\n                        >\n                            Начать заново\n                        </Button>\n                    </div>\n                </div>\n                {this.state.type !== 'failure' &&\n                    <div style={{\n                        whiteSpace: 'pre-wrap',\n                        marginBottom: '1em'\n                    }}>\n                        {parseMathjax(this.state.text)}\n                    </div>\n                }\n                {this.state.id === 'success' &&\n                    <div>\n                        <center>\n                            <h1>Поздравляем!</h1>\n                            <span>\n                                Вы выполнили все задачи за {timeSince(\n                                    new Date(localStorage.getItem('end_time')),\n                                    new Date(localStorage.getItem('start_time'))\n                                )}.\n                            </span>\n                        </center>\n                    </div>\n                }\n                {this.state.type === 'failure' &&\n                    <div>\n                        <center>\n                            <h1>Неправильно</h1>\n                            <video autoplay=\"autoplay\" muted>\n                                <source src=\"failure.mp4\" type=\"video/mp4\" />\n                            </video>\n                            <Button\n                                variant=\"primary\"\n                                style={{width: '20em'}}\n                                onClick={() => this.get()}\n                            >\n                                Попробовать еще раз\n                            </Button>\n                        </center>\n                    </div>\n                }\n                {this.renderResponseField()}\n            </div>\n        );\n    }\n}\n\nexport default Tasks;\n","import React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport MathJax from 'react-mathjax';\nimport axios from './Axios.js';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass SuperTask extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: ''\n        };\n    }\n\n    componentDidMount() {\n        document.title = 'Веб-квест - Супер-задача';\n        this.get();\n    }\n\n    get() {\n        let jsonRequest = {\n            id: 'super'\n        };\n        axios\n            .post('/api/task/get', jsonRequest, null)\n            .then(response => {\n                this.setState({\n                    text: response.data.text\n                });\n            })\n            .catch(error => console.log(error));\n    }\n\n    numericInputHandler(e) {\n        const re = /[0-9.]/g;\n        if(!re.test(e.key))\n            e.preventDefault();\n    }\n\n    render() {\n        return (\n            <div style={{\n                display: 'flex',\n                flexDirection: 'column'\n            }}>\n                <div style={{\n                    marginBottom: '1em'\n                }}>\n                    <Link to=\"/\">\n                        <Button\n                            variant=\"primary\"\n                            style={{width: '10em'}}\n                        >\n                            На главную\n                        </Button>\n                    </Link>\n                </div>\n                <div style={{\n                    whiteSpace: 'pre-wrap'\n                }}>\n                    <MathJax.Provider>\n                        {this.state.text\n                            .split('$')\n                            .map((value, index) => {\n                                if(index % 2 === 1)\n                                    return (\n                                        <MathJax.Node inline formula={value} />\n                                    );\n                                else\n                                    return value;\n                            }) }\n                    </MathJax.Provider>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SuperTask;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport FrontPage from './FrontPage.js';\nimport Tasks from './Tasks.js';\nimport SuperTask from './SuperTask.js';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component {\n    render() {\n        const frontPage = (<FrontPage />);\n        const tasksPage = (<Tasks />);\n        const superTaskPage = (<SuperTask />);\n        return (\n            <div style={{\n                fontFamily: 'Roboto',\n                fontWeight: 'normal',\n                fontStyle: 'normal',\n                fontSize: '18px'\n            }}>\n                <div style={{\n                    display: 'flex',\n                    flexDirection: 'row',\n                    justifyContent: 'center'\n                }}>\n                    <div class=\"main-component\">\n                        <BrowserRouter>\n                            <Switch>\n                                <Route\n                                    exact\n                                    path=\"/\"\n                                    render={() => {\n                                        return frontPage;\n                                    }}\n                                />\n                                <Route\n                                    exact\n                                    path=\"/index.html\"\n                                    render={() => {\n                                        return frontPage;\n                                    }}\n                                />\n                                <Route\n                                    exact\n                                    path=\"/tasks.html\"\n                                    render={() => {\n                                        return tasksPage;\n                                    }}\n                                />\n                                <Route\n                                    exact\n                                    path=\"/supertask.html\"\n                                    render={() => {\n                                        return superTaskPage;\n                                    }}\n                                />\n                            </Switch>\n                        </BrowserRouter>\n                    </div>\n                </div>\n                <div class=\"bottom-panel\">\n                    Авторы: Бурховецкий В.&thinsp;В.,\n                    Ибрагимов Р.&thinsp;А., Метелица Е.&thinsp;А.,\n                    Данильченко И.&thinsp;А., Штейнберг Б.&thinsp;Я.\n                </div>\n            </div>\n        );\n    }\n}\n\n// <BottomPanel>\n//     Авторы: Бурховецкий В.&thinsp;В.,\n//     Ибрагимов Р.&thinsp;А., Метелица Е.&thinsp;А.,\n//     Данильченко И.&thinsp;, Штейнберг Б.&thinsp;Я.\n// </BottomPanel>\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'typeface-roboto';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}